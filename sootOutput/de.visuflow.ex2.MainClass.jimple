public class de.visuflow.ex2.MainClass extends java.lang.Object
{

    public void <init>()
    {
        de.visuflow.ex2.MainClass this;

        this := @this: de.visuflow.ex2.MainClass;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        java.util.Map changeSet;
        java.util.HashMap $r0;
        de.visuflow.reporting.EmptyReporter $r1;
        soot.jimple.changeset.AnalysisChangeSetFinder $r2;
        java.lang.String $r3, $r4, $r5;

        args := @parameter0: java.lang.String[];

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = new de.visuflow.reporting.EmptyReporter;

        specialinvoke $r1.<de.visuflow.reporting.EmptyReporter: void <init>()>();

        staticinvoke <de.visuflow.ex2.MainClass: void runAnalysis(de.visuflow.reporting.IReporter,int,java.util.Map)>($r1, 3, $r0);

        $r2 = new soot.jimple.changeset.AnalysisChangeSetFinder;

        $r5 = args[0];

        $r4 = args[1];

        $r3 = args[2];

        specialinvoke $r2.<soot.jimple.changeset.AnalysisChangeSetFinder: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r5, $r4, $r3);

        changeSet = virtualinvoke $r2.<soot.jimple.changeset.AnalysisChangeSetFinder: java.util.Map computeChangeSet()>();

        staticinvoke <de.visuflow.ex2.updated.MainClassUpdated: void main(java.util.Map,java.util.Map)>($r0, changeSet);

        return;
    }

    public static void runAnalysis(de.visuflow.reporting.IReporter, int, java.util.Map)
    {
        de.visuflow.reporting.IReporter reporter;
        int exercisenumber;
        java.util.Map cache;
        soot.PackManager $r2;
        soot.Pack $r3;
        java.lang.String[] $r4;
        de.visuflow.ex2.MainClass$1 tmp$1736238361;
        soot.Transform tmp$2096827468;
        soot.Transformer tmp$2067076166;

        reporter := @parameter0: de.visuflow.reporting.IReporter;

        exercisenumber := @parameter1: int;

        cache := @parameter2: java.util.Map;

        staticinvoke <soot.G: void reset()>();

        tmp$2096827468 = new soot.Transform;

        tmp$1736238361 = new de.visuflow.ex2.MainClass$1;

        specialinvoke tmp$1736238361.<de.visuflow.ex2.MainClass$1: void <init>(de.visuflow.reporting.IReporter,java.util.Map)>(reporter, cache);

        tmp$2067076166 = (soot.Transformer) tmp$1736238361;

        specialinvoke tmp$2096827468.<soot.Transform: void <init>(java.lang.String,soot.Transformer)>("jtp.analysis", tmp$2067076166);

        $r2 = staticinvoke <soot.PackManager: soot.PackManager v()>();

        $r3 = virtualinvoke $r2.<soot.PackManager: soot.Pack getPack(java.lang.String)>("jtp");

        virtualinvoke $r3.<soot.Pack: void add(soot.Transform)>(tmp$2096827468);

        $r4 = newarray (java.lang.String)[12];

        $r4[0] = "-pp";

        $r4[1] = "-process-dir";

        $r4[2] = "C:\\Users\\karth\\git\\visuflow-uitests-target\\bin";

        $r4[3] = "-w";

        $r4[4] = "-exclude";

        $r4[5] = "javax";

        $r4[6] = "-allow-phantom-refs";

        $r4[7] = "-no-bodies-for-excluded";

        $r4[8] = "-src-prec";

        $r4[9] = "class";

        $r4[10] = "-output-format";

        $r4[11] = "J";

        staticinvoke <soot.Main: void main(java.lang.String[])>($r4);

        return;
    }
}
